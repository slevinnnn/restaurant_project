#!/usr/bin/env python3
"""
Script para crear migración manual del campo mesa_asignada_at
"""

migration_content = '''"""Agregar campo mesa_asignada_at para cronometro preciso

Revision ID: {revision_id}
Revises: 
Create Date: 2025-08-21 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '{revision_id}'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cliente',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=True),
    sa.Column('cantidad_comensales', sa.Integer(), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('assigned_table', sa.Integer(), nullable=True),
    sa.Column('sid', sa.String(), nullable=True),
    sa.Column('atendido_at', sa.DateTime(), nullable=True),
    sa.Column('mesa_asignada_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mesa',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_occupied', sa.Boolean(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('cliente_id', sa.Integer(), nullable=True),
    sa.Column('disponible', sa.Boolean(), nullable=True),
    sa.Column('ocupada', sa.Boolean(), nullable=True),
    sa.Column('llego_comensal', sa.Boolean(), nullable=True),
    sa.Column('capacidad', sa.Integer(), nullable=True),
    sa.Column('reservada', sa.Boolean(), nullable=True),
    sa.Column('orden', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trabajador',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trabajador')
    op.drop_table('mesa')
    op.drop_table('cliente')
    # ### end Alembic commands ###
'''

import os
import hashlib
import time

# Generar revision ID único
revision_id = hashlib.md5(str(time.time()).encode()).hexdigest()[:12]

# Crear el contenido de la migración
final_content = migration_content.format(revision_id=revision_id)

# Escribir el archivo
migrations_dir = "migrations/versions"
filename = f"{revision_id}_migracion_inicial_completa.py"
filepath = os.path.join(migrations_dir, filename)

with open(filepath, 'w', encoding='utf-8') as f:
    f.write(final_content)

print(f"✅ Migración creada: {filepath}")
print(f"✅ Revision ID: {revision_id}")
